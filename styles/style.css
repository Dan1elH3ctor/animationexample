*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
.container {
    width: 200px;
    height: 200px;
    background-color: blueviolet;
    margin: 2rem auto;
    transition: all 1s;
}
.container:hover {
    transform: scale(0.4) rotate(300deg) 1s ease-in-out;
    animation: awesomeanimation 1s ease-in-out infinite;
}
/* Create an animation

animation property has the following attributes
- animation-name: Specifies the name of the keyframe you want to bind to the selector

- animation-duration: Specifies how many seconds or milliseconds an animation takes to complete

- animation-timing: Specifies the speed curve of the animation

- animation-delay: Specifies a delay before the animation will start

- animation-iteration-count: Specifies how many times an animation should be played

- animation-direction: Specifies whether or not the animation should play in reverse on alternate cycles

- animation-fill-mode: Specifies what values are applied by the animation outside the time it is executing

-animation-play-state: Specifies whether the animation is running or paused

NB: 
initial: Sets this property to its default value
inherit: Inherits this property from its parent element.
*/

/* animation: name duration timing-function delay iteration-count direction fill-mode play-state; */
/* .awesomeAnimation {
    animation: ;
} */
@keyframes awesomeanimation {
    0%{background-color: darkgoldenrod;
        transform: translateX(10);}
    30%{transform: scale(0.4);}
    50%{transform: rotate(300deg);}
    100%{transform: translateX(50);}
}
/* second approach */
@keyframes awesome {
    from {
        background-color: red;
        color: black;
    }
    to{
        transform: rotate(300deg);
    }
}